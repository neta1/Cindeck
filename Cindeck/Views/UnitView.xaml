<UserControl x:Class="Cindeck.Views.UnitView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Cindeck.Views"
             xmlns:c="clr-namespace:Cindeck.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="600">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <DockPanel Margin="5,5,5,0" LastChildFill="True">
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                    <ComboBox x:Name="comboBox" IsEditable="True" Text="{Binding UnitName}" ItemsSource="{Binding Units}" SelectedItem="{Binding SelectedUnit,Mode=TwoWay}" DisplayMemberPath="Name" Width="200" HorizontalAlignment="Left"/>
                    <Button Width="100" Margin="5,0,0,0" Command="{Binding SaveCommand}" Content="保存"></Button>
                    <Button Width="100" Margin="5,0,0,0" Command="{Binding DeleteCommand}" Content="削除"></Button>
                    <ComboBox Margin="20,0,0,0" ItemsSource="{Binding SongTypes}" SelectedValue="{Binding SongType}" DisplayMemberPath="Item2" SelectedValuePath="Item1"  Grid.Row="4" Grid.Column="1" MinWidth="100" HorizontalAlignment="Left"/>
                    <ComboBox Margin="5,0,0,0" ItemsSource="{Binding GrooveBursts}" SelectedValue="{Binding GrooveBurst}" DisplayMemberPath="Item2" SelectedValuePath="Item1"  Grid.Row="4" Grid.Column="1" MinWidth="100" HorizontalAlignment="Left"/>
                    <CheckBox Margin="5,5,0,0" Content="回復含む" IsChecked="{Binding ContainRecovery, Mode=TwoWay}"/>
                    <Button Width="100" Margin="5,0,0,0" Command="{Binding OptimizeCommand}" Content="最適化"></Button>
                    <ComboBox Margin="5,0,0,0" ItemsSource="{Binding OptimizeResults}" SelectedValue="{Binding SelectedOptimizeResult}" DisplayMemberPath="Item2" SelectedValuePath="Item1"  Grid.Row="5" Grid.Column="1" MinWidth="100" HorizontalAlignment="Left"/>
                </StackPanel>
                <Grid Margin="0,5,0,0" DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Button Click="Button_Click" Height="100" Width="150" Grid.Column="0" Command="{Binding HighlightCommand}" Background="{Binding TemporalUnit.Slot1.Category, Converter={StaticResource IdolTypeToColorConverter}}" CommandParameter="Slot1" HorizontalContentAlignment="Left" Content="{Binding TemporalUnit.Slot1, Converter={StaticResource UnitSlotConverter}}">
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="移動">
                                    <MenuItem Header="スロット2" Command="{Binding MoveToSlotCommand}"  CommandParameter="Slot1,Slot2" />
                                    <MenuItem Header="スロット3" Command="{Binding MoveToSlotCommand}" CommandParameter="Slot1,Slot3"  />
                                    <MenuItem Header="スロット4" Command="{Binding MoveToSlotCommand}" CommandParameter="Slot1,Slot4"  />
                                    <MenuItem Header="スロット5" Command="{Binding MoveToSlotCommand}" CommandParameter="Slot1,Slot5"  />
                                </MenuItem>
                                <MenuItem Command="{Binding ResetSlotCommand}" CommandParameter="Slot1" Header="リセット"></MenuItem>
                                <Separator/>
                                <MenuItem Header="IIDをコピー" Command="{Binding CopyIidFromSlotCommand}" CommandParameter="Slot1" />
                                <MenuItem Header="ゲストセンター" Command="{Binding SetGuestCenterFromSlotCommand}"  CommandParameter="Slot1"/>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button Click="Button_Click"  Background="{Binding TemporalUnit.Slot2.Category, Converter={StaticResource IdolTypeToColorConverter}}" Height="100" Width="150" Grid.Column="1" Command="{Binding HighlightCommand}" CommandParameter="Slot2" HorizontalContentAlignment="Left" Content="{Binding TemporalUnit.Slot2, Converter={StaticResource UnitSlotConverter}}">
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="移動">
                                    <MenuItem Header="スロット1" Command="{Binding MoveToSlotCommand}"  CommandParameter="Slot2,Slot1" />
                                    <MenuItem Header="スロット3" Command="{Binding MoveToSlotCommand}" CommandParameter="Slot2,Slot3"  />
                                    <MenuItem Header="スロット4" Command="{Binding MoveToSlotCommand}" CommandParameter="Slot2,Slot4"  />
                                    <MenuItem Header="スロット5" Command="{Binding MoveToSlotCommand}" CommandParameter="Slot2,Slot5"  />
                                </MenuItem>
                                <MenuItem Command="{Binding ResetSlotCommand}" CommandParameter="Slot2" Header="リセット"></MenuItem>
                                <Separator/>
                                <MenuItem Header="IIDをコピー" Command="{Binding CopyIidFromSlotCommand}" CommandParameter="Slot2" />
                                <MenuItem Header="ゲストセンター" Command="{Binding SetGuestCenterFromSlotCommand}"  CommandParameter="Slot2"/>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button Click="Button_Click" Background="{Binding TemporalUnit.Slot3.Category, Converter={StaticResource IdolTypeToColorConverter}}" Height="100" Width="150" Grid.Column="2" Command="{Binding HighlightCommand}" CommandParameter="Slot3" HorizontalContentAlignment="Left" Content="{Binding TemporalUnit.Slot3, Converter={StaticResource UnitSlotConverter}}">
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="移動">
                                    <MenuItem Header="スロット1" Command="{Binding MoveToSlotCommand}"  CommandParameter="Slot3,Slot1" />
                                    <MenuItem Header="スロット2" Command="{Binding MoveToSlotCommand}" CommandParameter="Slot3,Slot2"  />
                                    <MenuItem Header="スロット4" Command="{Binding MoveToSlotCommand}" CommandParameter="Slot3,Slot4"  />
                                    <MenuItem Header="スロット5" Command="{Binding MoveToSlotCommand}" CommandParameter="Slot3,Slot5"  />
                                </MenuItem>
                                <MenuItem Command="{Binding ResetSlotCommand}" CommandParameter="Slot3" Header="リセット"></MenuItem>
                                <Separator/>
                                <MenuItem Header="IIDをコピー" Command="{Binding CopyIidFromSlotCommand}" CommandParameter="Slot3" />
                                <MenuItem Header="ゲストセンター" Command="{Binding SetGuestCenterFromSlotCommand}"  CommandParameter="Slot3"/>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button Click="Button_Click" Background="{Binding TemporalUnit.Slot4.Category, Converter={StaticResource IdolTypeToColorConverter}}" Height="100" Width="150" Grid.Column="3" Command="{Binding HighlightCommand}" CommandParameter="Slot4" HorizontalContentAlignment="Left" Content="{Binding TemporalUnit.Slot4, Converter={StaticResource UnitSlotConverter}}">
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="移動">
                                    <MenuItem Header="スロット1" Command="{Binding MoveToSlotCommand}"  CommandParameter="Slot4,Slot1" />
                                    <MenuItem Header="スロット2" Command="{Binding MoveToSlotCommand}" CommandParameter="Slot4,Slot2"  />
                                    <MenuItem Header="スロット3" Command="{Binding MoveToSlotCommand}" CommandParameter="Slot4,Slot3"  />
                                    <MenuItem Header="スロット5" Command="{Binding MoveToSlotCommand}" CommandParameter="Slot4,Slot5"  />
                                </MenuItem>
                                <MenuItem Command="{Binding ResetSlotCommand}" CommandParameter="Slot4" Header="リセット"></MenuItem>
                                <Separator/>
                                <MenuItem Header="IIDをコピー" Command="{Binding CopyIidFromSlotCommand}" CommandParameter="Slot4" />
                                <MenuItem Header="ゲストセンター" Command="{Binding SetGuestCenterFromSlotCommand}"  CommandParameter="Slot4"/>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button Click="Button_Click" Background="{Binding TemporalUnit.Slot5.Category, Converter={StaticResource IdolTypeToColorConverter}}" Height="100" Width="150" Grid.Column="4" Command="{Binding HighlightCommand}" CommandParameter="Slot5" HorizontalContentAlignment="Left" Content="{Binding TemporalUnit.Slot5, Converter={StaticResource UnitSlotConverter}}">
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="移動">
                                    <MenuItem Header="スロット1" Command="{Binding MoveToSlotCommand}"  CommandParameter="Slot5,Slot1" />
                                    <MenuItem Header="スロット2" Command="{Binding MoveToSlotCommand}" CommandParameter="Slot5,Slot2"  />
                                    <MenuItem Header="スロット3" Command="{Binding MoveToSlotCommand}" CommandParameter="Slot5,Slot3"  />
                                    <MenuItem Header="スロット4" Command="{Binding MoveToSlotCommand}" CommandParameter="Slot5,Slot4"  />
                                </MenuItem>
                                <MenuItem Command="{Binding ResetSlotCommand}" CommandParameter="Slot5" Header="リセット"></MenuItem>
                                <Separator/>
                                <MenuItem Header="IIDをコピー" Command="{Binding CopyIidFromSlotCommand}" CommandParameter="Slot5" />
                                <MenuItem Header="ゲストセンター" Command="{Binding SetGuestCenterFromSlotCommand}"  CommandParameter="Slot5"/>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                </Grid>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                    <Label Content="センター効果"  FontWeight="Bold"/>
                    <Label Content="{Binding TemporalUnit.Center.CenterEffect.Description, FallbackValue=なし}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                    <Label Content="ステータス(センター効果なし)" FontWeight="Bold"/>
                    <c:UnitStatus Life="{Binding TemporalUnit.Life}" Vocal="{Binding TemporalUnit.Vocal}" Dance="{Binding TemporalUnit.Dance}" Visual="{Binding TemporalUnit.Visual}" TotalAppeal="{Binding TemporalUnit.TotalAppeal}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                    <Label Content="ステータス(センター効果込み)"  FontWeight="Bold"/>
                    <c:UnitStatus Life="{Binding TemporalUnit.LifeWithCenterEffect}" Vocal="{Binding TemporalUnit.VocalWithCenterEffect}" Dance="{Binding TemporalUnit.DanceWithCenterEffect}" Visual="{Binding TemporalUnit.VisualWithCenterEffect}" TotalAppeal="{Binding TemporalUnit.TotalAppealWithCenterEffect}"/>
                </StackPanel>
                <c:SkillTimeline DataContext="{Binding TemporalUnit}" DockPanel.Dock="Top"/>

                <DockPanel LastChildFill="True">
                    <c:IdolFilterPanel Margin="0,5,0,5" DockPanel.Dock="Top" DataContext="{Binding Filter}"/>
                    <StackPanel Margin="0,5" DockPanel.Dock="Bottom">
                        <TextBlock>
                            <Run Text="{Binding Idols.SourceCollection.Count, Mode=OneWay}"/>件中<Run Text="{Binding Idols.Count, Mode=OneWay}"/>件の結果を表示中
                        </TextBlock>
                    </StackPanel>
                    <c:SelectedItemBindableDataGrid MaxHeight="468"  x:Name="IdolGrid" ItemsSource="{Binding Path=Idols, IsAsync=True}" DockPanel.Dock="Top" SelectionMode="Single" SelectedItem="{Binding SelectedIdol, Mode=TwoWay}" AutoGenerateColumns="False" HorizontalAlignment="Stretch" Grid.Row="1">
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="Background" Value="{Binding Category, Converter={StaticResource IdolTypeToColorConverter}}"/>
                            </Style>
                        </DataGrid.RowStyle>
                        <c:SelectedItemBindableDataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="スロット1" Command="{Binding SendToSlotCommand}" CommandParameter="Slot1" />
                                <MenuItem Header="スロット2" Command="{Binding SendToSlotCommand}"  CommandParameter="Slot2" />
                                <MenuItem Header="スロット3" Command="{Binding SendToSlotCommand}" CommandParameter="Slot3"  />
                                <MenuItem Header="スロット4" Command="{Binding SendToSlotCommand}" CommandParameter="Slot4"  />
                                <MenuItem Header="スロット5" Command="{Binding SendToSlotCommand}" CommandParameter="Slot5"  />
                                <Separator/>
                                <MenuItem Header="IIDをコピー" Command="{Binding CopyIidCommand}"  />
                                <MenuItem Header="ゲストセンター" Command="{Binding SetGuestCenterCommand}"  />
                            </ContextMenu>
                        </c:SelectedItemBindableDataGrid.ContextMenu>
                        <c:SelectedItemBindableDataGrid.Columns>
                            <DataGridTextColumn IsReadOnly="True" Header="OID" Binding="{Binding Path=Oid}"/>
                            <DataGridTextColumn IsReadOnly="True" Header="IID" Binding="{Binding Path=Iid, StringFormat=x8}"/>
                            <DataGridTextColumn IsReadOnly="True" Header="レア度" Binding="{Binding Path=Rarity, Converter={StaticResource RarityConverter}}"/>
                            <DataGridTextColumn IsReadOnly="True" Header="名前" SortMemberPath="Name" Binding="{Binding Path=LabeledName}"/>
                            <DataGridTextColumn IsReadOnly="True" Header="タイプ" Binding="{Binding Path=Category, Converter={StaticResource IdolCategoryConverter}}"/>
                            <DataGridComboBoxColumn Header="特技Lv" ItemsSource="{StaticResource SkillLevels}" SelectedItemBinding="{Binding Path=SkillLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn IsReadOnly="True" Header="特技効果値" Binding="{Binding Path=SkillScore, StringFormat=F2}"/>
                            <DataGridTemplateColumn IsReadOnly="True" Header="ライフ" SortMemberPath="Life">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Life}"/>
                                            <TextBlock Margin="2,0,0,0" TextAlignment="Center" Width="20" Text="{Binding Potential.Life}" Background="#FF10AE00" Foreground="White"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn IsReadOnly="True" Header="合計アピール" Binding="{Binding Path=TotalAppeal}"/>
                            <DataGridTemplateColumn IsReadOnly="True" Header="ボーカルアピール" SortMemberPath="Vocal">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Vocal}"/>
                                            <TextBlock Margin="2,0,0,0" TextAlignment="Center" Width="20" Text="{Binding Potential.Vocal}" Background="#FFFF005D" Foreground="White"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn IsReadOnly="True" Header="ダンスアピール" SortMemberPath="Dance">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Dance}"/>
                                            <TextBlock Margin="2,0,0,0" TextAlignment="Center" Width="20" Text="{Binding Potential.Dance}" Background="#FF0074FF" Foreground="White"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn IsReadOnly="True" Header="ビジュアルアピール" SortMemberPath="Visual">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Visual}"/>
                                            <TextBlock Margin="2,0,0,0" TextAlignment="Center" Width="20" Text="{Binding Potential.Visual}" Background="#FFFFAE00" Foreground="White"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn IsReadOnly="True" Header="センター効果" Binding="{Binding Path=CenterEffect, Converter={StaticResource CenterEffectConverter}}"/>
                            <DataGridTextColumn IsReadOnly="True" Header="特技" Binding="{Binding Path=Skill, Converter={StaticResource SkillConverter}}"/>
                            <DataGridTextColumn IsReadOnly="True" Header="実装" Binding="{Binding Path=ImplementationDate, StringFormat=yyyy/MM/dd}"/>
                        </c:SelectedItemBindableDataGrid.Columns>
                    </c:SelectedItemBindableDataGrid>
                </DockPanel>
            </DockPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
